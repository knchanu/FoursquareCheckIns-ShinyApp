#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
heartrate_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram(binwidth = 0.2)
heartrate_histogram
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram(binwidth = 0.2)
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
###3
#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram()
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
###3
#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram()
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
scatterplot_temp = ggplot(temp, aes(x=Heart.Rate, y = Body.Temp)) + geom_point()
###3
#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram()
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
scatterplot_temp = ggplot(temp, aes(x=Heart.Rate, y = Body.Temp)) + geom_point()
scatterplot_temp
###3
#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
?xtabs
class(temp$Gender)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
crosstab_temp = xtabs(~ Gender + Body.Temp, temp)
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram()
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
scatterplot_temp = ggplot(temp, aes(x=Heart.Rate, y = Body.Temp)) + geom_point()
scatterplot_temp
###3
#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
crosstab_temp = xtabs(~ Gender + Body.Temp, temp)
crosstab_temp
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram()
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
scatterplot_temp = ggplot(temp, aes(x=Heart.Rate, y = Body.Temp)) + geom_point()
scatterplot_temp
###3
#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
crosstab_temp = xtabs(~ Gender + Body.Temp + Heart.Rate, temp)
crosstab_temp
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram()
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
scatterplot_temp = ggplot(temp, aes(x=Heart.Rate, y = Body.Temp)) + geom_point()
scatterplot_temp
###3
#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp, temp$Gender)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
crosstab_temp = xtabs(~ Gender + Body.Temp + Heart.Rate, temp)
crosstab_temp
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram()
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
scatterplot_temp = ggplot(temp, aes(x=Heart.Rate, y = Body.Temp)) + geom_point()
scatterplot_temp
###3
#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp, temp$Gender, temp$Gender)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
crosstab_temp = xtabs(~ Gender + Body.Temp + Heart.Rate, temp)
crosstab_temp
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram()
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
scatterplot_temp = ggplot(temp, aes(x=Heart.Rate, y = Body.Temp)) + geom_point()
scatterplot_temp
###3
#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
crosstab_temp = xtabs(~ Gender + Body.Temp + Heart.Rate, temp)
crosstab_temp
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram()
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
scatterplot_temp = ggplot(temp, aes(x=Heart.Rate, y = Body.Temp)) + geom_point()
scatterplot_temp
###3
#Hypothesis test
#Null hypothesis:
#Alternate hypothesis:
###4
###5
crosstab_temp = xtabs(~ Gender + Heart.Rate, temp)
crosstab_temp
crosstab_temp = xtabs(~ Gender + Heart.Rate, temp)
crosstab_temp
t.statistic = (mean(Body.Temp) - 68)/(sd(heights)/sqrt(100))
t.statistic = (mean(temp$Body.Temp) - 98.6)/(sd(temp$Body.Temp)/sqrt(130))
t.statistic
t.statistic                                               #the t-statistic
t.statistic
source('~/Desktop/NYSDSA Lecture/FoundationsOfStatistics.R', echo=TRUE)
source('~/Desktop/NYSDSA Lecture/FoundationsOfStatistics.R', echo=TRUE)
source('~/Desktop/NYSDSA Lecture/FoundationsOfStatistics.R', echo=TRUE)
###########################
#####One-Sample T-Test#####
###########################
set.seed(0)
heights = rnorm(n = 100, mean = 70, sd = 1) #Randomly generating 100 normally
abline(v = 68, lwd = 2, lty = 2, col = "red")
abline(v = 70, lwd = 2, lty = 2)
plot(density(heights), main = "Sample Distribution of Heights")
abline(v = 70, lwd = 2, lty = 2)
abline(v = 68, lwd = 2, lty = 2, col = "red")
t.test(temp$Body.Temp, mu = 98.6, alternative = "not equal")
?t.test
t.test(temp$Body.Temp, mu = 98.6, alternative = c("two.sided","less", "greater"), conf.level = 0.95)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
View(temp)
###1
#Numerical/Non-graphical EDA:
#Univariate EDA for all variables: Frequency Table
F_Gender = table(temp$Gender)
F_BT = table(temp$Body.Temp)
F_HR = table(temp$Heart.Rate)
F_Gender
F_BT
F_HR
#Bivariate EDA where appropriate: Cross-tabulation
crosstab_temp = xtabs(~ Gender + Heart.Rate, temp)
crosstab_temp
#Actually, it does not make sense to cross-tabulate because there is only one categorical variable.
###2
#Graphical EDA:
#Univariate EDA for all for all continuous variables: Histogram
library(ggplot2)
bodytemp_histogram = ggplot(temp, aes(Body.Temp)) + geom_histogram(binwidth = 0.2)
bodytemp_histogram
heartrate_histogram = ggplot(temp, aes(Heart.Rate)) + geom_histogram()
heartrate_histogram
#Bivariate EDA where appropriate: scatter plot
scatterplot_temp = ggplot(temp, aes(x=Heart.Rate, y = Body.Temp)) + geom_point()
scatterplot_temp
###3
#Hypothesis test using one sample t-test
#Null hypothesis: Average human body temperature = 98.6 degrees Fahrenheit
#Alternate hypothesis: average human body temperature is not 98.6 degrees Fahrenheit
t.test(temp$Body.Temp, mu = 98.6, alternative = c("two.sided","less", "greater"), conf.level = 0.95)
#The p-value is 2.411e-07. Since the p-value < 0.05, we reject the null hypothesis in favor of the alternate hypothesis. The alternate hypothesis is that the average human body temperature is not 98.6 degrees Fahrenheit.
###4
#Hypothesis test using two sample t-test
#Null hypothesis:
#Alternate hypothesis:
###5
t.test(temp$Body.Temp, mu = 98.6, alternative = c("less", "greater"), conf.level = 0.95)
t.test(temp$Body.Temp, mu = 98.6, alternative = c("less", "greater"), conf.level = 0.95)
temp %>% group_by(Gender)
class(temp)
sample1 = temp %>% filter(Gender == 'Male')
sample1
sample2 = temp %>% filter(Gender == 'Female')
sample2
t.test(sample1, sample2, alternative = c("two-sided"), conf.level = 0.95)
t.test(sample1, sample2, alternative = "two-sided", conf.level = 0.95)
t.test(sample1, sample2, alternative = c("two-sided","less","greater"), conf.level = 0.95)
t.test(sample1, sample2, alternative = c("two-sided","less","greater"), conf.level = 0.95)
t.test(sample1, sample2, alternative = c("two.sided","less", "greater"), conf.level = 0.95)
t.test(sample1$Body.Temp, sample2$Body.Temp, alternative = c("two.sided","less", "greater"), conf.level = 0.95)
q3
q3 = t.test(temp$Body.Temp, mu = 98.6, alternative = c("two.sided","less", "greater"), conf.level = 0.95)
q3
q4
q4 = t.test(sample1$Body.Temp, sample2$Body.Temp, alternative = c("two.sided","less", "greater"), conf.level = 0.95)
q4
?var.test
q5 = var.test(sample1$Heart.Rate, sample2$Heart.Rate, alternative = c("two.sided","less", "greater"), conf.level = 0.95)
q5
0.011 < 0.05
##1
mosaicplot(HairEyeColor, shade = TRUE)
library(datasets)
ls()
data("PlantGrowth")
View(PlantGrowth)
str(PlantGrowth)
boxplotPlant = ggplot(PlantGrowth, aes(x=reorder(weight,group)), y=group)) + geom_boxplot()
boxplotPlant = ggplot(PlantGrowth, aes(x=reorder(weight,group)), y=group)) + geom_boxplot())
boxplotPlant = ggplot(PlantGrowth, aes(x=reorder(weight,group)), y=group) + geom_boxplot())
boxplotPlant = ggplot(PlantGrowth, aes(x=reorder(weight,group)), y=group) + geom_boxplot())
boxplotPlant = ggplot(PlantGrowth, aes(x=reorder(weight,group)), y=group) + geom_boxplot()
boxplotPlant
boxplotPlant
boxplotPlant = ggplot(PlantGrowth, aes(x=reorder(weight,group)), y=group) + geom_boxplot()
boxplotPlant
boxplotPlant
boxplotPlant
boxplotPlant = ggplot(PlantGrowth, aes(x= group, y = weight) + geom_boxplot()
boxplotPlant
boxplotPlant = ggplot(PlantGrowth, aes(x= group, y = weight) + geom_boxplot())
boxplotPlant = ggplot(PlantGrowth, aes(x= group, y = weight)) + geom_boxplot()
boxplotPlant
boxplotPlant = ggplot(PlantGrowth, aes(x= reorder(weight,group), y = weight)) + geom_boxplot()
boxplotPlant
boxplotPlant = ggplot(PlantGrowth, aes(x= group, y = weight)) + geom_boxplot()
boxplotPlant
?bartlett.test
bartlettPlants = bartlett.test(s1$weight, s2$weight, s3$weight)
s1 = PlantGrowth %>% fiter(group == 'ctrl')
s1 = PlantGrowth %>% filter(group == 'ctrl')
s2 = PlantGrowth %>% filter(group == 'trt1')
s3 = PlantGrowth %>% filter(group == 'trt2')
bartlettPlants = bartlett.test(s1$weight, s2$weight, s3$weight)
s1
s1
s2
s3
s2
bartlettPlants = bartlett.test(s1$weight, s2$weight, s3$weight)
s1$weight
bartlettPlants = bartlett.test(list(s1$weight, s2$weight, s3$weight))
bartlettPlants
?sd
sd_ctrl = sd(s1$weight)
sd_trt1 = sd(s2$weight)
sd_trt2 = sd(s3$weight)
sd_ctrl
sd_trt1
sd_trt2
bartlettPlants = bartlett.test(list(s1$weight, s2$weight, s3$weight))
subset = HairEyeColor %>% filter(Sex == 'Female' & Eye == 'Brown' & Eye == 'Blue')
class(HairEyeColor)
as.data.frame(HairEyeColor)
df_HairEyeColor = as.data.frame.table(HairEyeColor)
subset = HairEyeColor %>% filter(Sex == 'Female' & Eye == 'Brown' & Eye == 'Blue')
subset = df_HairEyeColor %>% filter(Sex == 'Female' & Eye == 'Brown' & Eye == 'Blue')
subset
subset = df_HairEyeColor %>% filter(Sex == 'Female' & Eye == 'Brown' & Eye == 'Blue')
subset
subset = df_HairEyeColor %>% filter(Sex == 'Female' & Eye == 'Brown' | Eye == 'Blue')
subset
mosaicplot(df_HairEyeColor, shade = TRUE)
mosaicplot(df_HairEyeColor, shade = FALSE)
?mosaicplot
subset = df_HairEyeColor %>% filter(Sex == 'Female' & (Eye == 'Brown' | Eye == 'Blue'))
mosaicplot(df_HairEyeColor, shade = )   ???
mosaicplot(df_HairEyeColor, shade = TRUE)
mosaicplot(subset, shade = TRUE)
mosaicplot(subset, shade = FALSE)
mosaicplot(subset, shade = TRUE)
mosaicplot(subset, shade = TRUE, main = "x")
mosaicplot(HairEyeColor, shade = TRUE)
x = as.data.frame(HairEyeColor)
mosaicplot(x, shade = TRUE)
mosaicplot(HairEyeColor, shade = TRUE)
y_ = as.table(subset)
y_ = as.table.default(subset)
y_ = as.table.default(subset)
View(raw.df)
source('~/Desktop/NYSDSA Homework/Neha_ShinyProject/Code/RawData.R', echo=TRUE)
write.csv(raw.df, file='my_data.csv', row.names=F)
y = as.character(raw.df$Split)
y
class(y)
raw.df$Split = as.character(raw.df$Split)
class(raw.df$Split)
write.csv(raw.df, file='my_data.csv', row.names=F)
source('~/Desktop/NYSDSA Homework/Neha_ShinyProject/Code/RawData.R')
source('~/Desktop/NYSDSA Homework/Neha_ShinyProject/Code/RawData.R', echo=TRUE)
source('~/Desktop/NYSDSA Homework/Neha_ShinyProject/Code/RawData.R')
shiny::runApp('ShinyApp')
runApp('~/Desktop/dummy')
runApp('ShinyApp')
runApp('ShinyApp')
runApp('ShinyApp')
runApp('~/Desktop/NYSDSA Lecture/flights-4 2/flights_final')
runApp('~/Desktop/NYSDSA Lecture/flights-4 2/flights_final')
runApp('ShinyApp')
runApp('~/Desktop/NYSDSA Lecture/flights-4 2/flights')
flights <- fread(file = "./my_data.csv")
flights <- fread(file = "./ShinyApp/my_data.csv")
runApp('ShinyApp')
source('~/Desktop/NYSDSA Homework/Neha_ShinyProject/Code/RawData.R', echo=TRUE)
runApp('ShinyApp')
runApp('~/Desktop/NYSDSA Lecture/flights-4 2/flights')
runApp('ShinyApp')
names(raw.df)
runApp('ShinyApp')
runApp('ShinyApp')
runApp('ShinyApp')
runApp('ShinyApp')
runApp('ShinyApp')
class(raw.df$Time)
hours(raw.df$Time)
source('~/Desktop/NYSDSA Homework/Neha_ShinyProject/Code/RawData.R', echo=TRUE)
runApp('~/Desktop/NYSDSA Lecture/flights-4/flights')
runApp('ShinyApp')
flights <- fread(file = "./my_data.csv")
runApp('ShinyApp')
